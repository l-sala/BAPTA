hiPSC_ventricular_plot
source("~/Downloads/AP-batch-analysis-RECOVERED/scripts/AP_Output_Analysis.R", echo=TRUE)
df_averages_temp <- read.csv(paste(path,"/",dir.names[d],"/", file.names, sep=""), check.names=FALSE)
head()
dir.names <- list.dirs(path, recursive = F, full.names = F)  #list of directories, recursive = F removes the path directory from the list.
dir.names
#### Averages ####
for(d in 1:length(dir.names)){
file.names <- dir(paste(path,"/",dir.names[d], sep=""), pattern ="Mean Values.csv") #change this if you change the file type
df_averages_temp <- read.csv(paste(path,"/",dir.names[d],"/", file.names, sep=""), check.names=FALSE)
df_averages_temp$Folder <- dir.names[d] # extract file names
var_names <- strsplit(dir.names[d], "_|\\s+") # splits the folder names after "_"
for(n in 1:length(var_names[[1]])){
df_averages_temp[[paste("Condition", as.character(n), sep = " ")]] = var_names[[1]][n]
}
df_averages <- smartbind(df_averages, df_averages_temp)
}
source("~/Downloads/AP-batch-analysis-RECOVERED/scripts/AP_Output_Analysis.R", echo=TRUE)
source("~/Downloads/AP-batch-analysis-RECOVERED/scripts/AP_Output_Analysis.R", echo=TRUE)
source("~/Downloads/AP-batch-analysis-RECOVERED/scripts/AP_Output_Analysis.R", echo=TRUE)
for(n in 1:length(var_names[[1]])){
df_averages_temp[[paste("Condition", as.character(n), sep = " ")]] = var_names[[1]][n]
}
df_averages
head(df_averages())
source("~/Downloads/AP-batch-analysis-RECOVERED/scripts/AP_Output_Analysis.R", echo=TRUE)
path <- "../output/analyses"
df_averages <- data.frame()
df_averages_temp <- data.frame()
df_apd <- data.frame()
df_apd_temp <- data.frame()
dir.names <- list.dirs(path, recursive = F, full.names = F)  #list of directories, recursive = F removes the path directory from the list.
#### Averages ####
for(d in 1:length(dir.names)){
file.names <- dir(paste(path,"/",dir.names[d], sep=""), pattern ="Mean Values.csv") #change this if you change the file type
df_averages_temp <- read.csv(paste(path,"/",dir.names[d],"/", file.names, sep=""), check.names=FALSE)
df_averages_temp$Folder <- dir.names[d] # extract file names
var_names <- strsplit(dir.names[d], "_|\\s+") # splits the folder names after "_"
for(n in 1:length(var_names[[1]])){
df_averages_temp[[paste("Condition", as.character(n), sep = " ")]] = var_names[[1]][n]
}
df_averages <- smartbind(df_averages, df_averages_temp)
}
file.names <- dir(paste(path,"/",dir.names[d], sep=""), pattern ="Mean Values.csv") #change this if you change the file type
file.names
df_averages_temp <- read.csv(paste(path,"/",dir.names[d],"/", file.names, sep=""), check.names=FALSE)
df_averages_temp
head(df_averages_temp)
typeof(df_averages_temp$`File Name`)
as.character(df_averages_temp$`File Name`)
df_averages_temp$`File Name` <- as.character(df_averages_temp$`File Name`)
source("~/Downloads/AP-batch-analysis-RECOVERED/scripts/AP_Output_Analysis.R", echo=TRUE)
getwd()
source("~/Downloads/AP-batch-analysis-RECOVERED/scripts/AP_Output_Analysis.R", echo=TRUE)
source("~/Downloads/AP-batch-analysis-RECOVERED/manuscript/code/Figure 6 - hiPSC-CMs.R", echo=TRUE)
source("~/Downloads/AP-batch-analysis-RECOVERED/manuscript/code/Figure 6 - hiPSC-CMs.R", echo=TRUE)
getwd()
source("~/Downloads/AP-batch-analysis-RECOVERED/manuscript/code/Figure 6 - hiPSC-CMs.R", echo=TRUE)
source("~/Downloads/AP-batch-analysis-RECOVERED/manuscript/code/Figure 6 - hiPSC-CMs.R", echo=TRUE)
getwd()
source("~/Downloads/AP-batch-analysis-RECOVERED/manuscript/code/Figure 6 - hiPSC-CMs.R", echo=TRUE)
source("~/Downloads/AP-batch-analysis-RECOVERED/manuscript/code/Figure 6 - hiPSC-CMs.R", echo=TRUE)
## hiPSC-CMs Ventricular ########
hiPSC_ventricular_immature %>%
ggplot(aes(x = hiPSC_ventricular_mature[,1],
y = hiPSC_ventricular_mature[,2]))+
geom_line()+
coord_cartesian(x = c(0,0.4),
y = c(-80, 60))+
labs(x = "Time (s)",
y = "Voltage (mV)")+
theme_clean()+
ggtitle("Guinea Pig Ventricular")+
q
source("~/Downloads/AP-batch-analysis-RECOVERED/manuscript/code/Figure 6 - hiPSC-CMs.R", echo=TRUE)
source("~/Downloads/AP-batch-analysis-RECOVERED/manuscript/code/Figure 6 - hiPSC-CMs.R", echo=TRUE)
hiPSC_ventricular_mature_abf$data[[1]]
source("~/Downloads/AP-batch-analysis-RECOVERED/manuscript/code/Figure 6 - hiPSC-CMs.R", echo=TRUE)
source("~/Downloads/AP-batch-analysis-RECOVERED/manuscript/code/Figure 6 - hiPSC-CMs.R", echo=TRUE)
source("~/Downloads/AP-batch-analysis-RECOVERED/manuscript/code/Figure 6 - hiPSC-CMs.R", echo=TRUE)
source("~/Downloads/AP-batch-analysis-RECOVERED/manuscript/code/Figure 6 - hiPSC-CMs.R", echo=TRUE)
ggplot() +
geom_line(data = hiPSC_ventricular_immature,
aes(x = hiPSC_ventricular_mature[,1]-0.028, # subtracted time to synchronize the peaks
y = hiPSC_ventricular_mature[,2],
colour = "Immature"))
hiPSC_ventricular_immature %>%
ggplot(aes(x = hiPSC_ventricular_mature[,1],
y = hiPSC_ventricular_mature[,2]))+
geom_line()+
coord_cartesian(x = c(0,0.4),
y = c(-80, 60))+
labs(x = "Time (s)",
y = "Voltage (mV)")+
theme_clean()+
ggtitle("Ventricular-like hiPSC-CMs")+
q
hiPSC_ventricular_plot
hiPSC_ventricular_plot <-
ggplot() +
geom_line(data = hiPSC_ventricular_immature,
aes(x = hiPSC_ventricular_mature[,1]-0.028, # subtracted time to synchronize the peaks
y = hiPSC_ventricular_mature[,2],
colour = "Immature"))+
geom_line(data = hiPSC_ventricular_mature,
aes(x = hiPSC_ventricular_mature[,1]-0.013, # subtracted time to synchronize the peaks
y = hiPSC_ventricular_mature[,2],
colour = "Mature"))+
coord_cartesian(x = c(0,0.4),
y = c(-80, 60))+
labs(x = "Time (s)",
y = "Voltage (mV)")+
theme_clean()+
scale_colour_manual(values = c("black", "#0077b6"))+
q
hiPSC_ventricular_plot <-
ggplot() +
geom_line(data = hiPSC_ventricular_immature,
aes(x = hiPSC_ventricular_mature[,1]-0.028, # subtracted time to synchronize the peaks
y = hiPSC_ventricular_mature[,2],
colour = "Immature"))+
geom_line(data = hiPSC_ventricular_mature,
aes(x = hiPSC_ventricular_mature[,1]-0.013, # subtracted time to synchronize the peaks
y = hiPSC_ventricular_mature[,2],
colour = "Mature"))+
coord_cartesian(x = c(0,0.4),
y = c(-80, 60))+
labs(x = "Time (s)",
y = "Voltage (mV)")+
theme_clean()+
scale_colour_manual(values = c("black", "green"))+
q
hiPSC_ventricular_plot
hiPSC_ventricular_plot <-
ggplot() +
geom_line(data = hiPSC_ventricular_immature,
aes(x = hiPSC_ventricular_mature[,1], # subtracted time to synchronize the peaks
y = hiPSC_ventricular_mature[,2],
colour = "Immature"))+
geom_line(data = hiPSC_ventricular_mature,
aes(x = hiPSC_ventricular_mature[,1], # subtracted time to synchronize the peaks
y = hiPSC_ventricular_mature[,2],
colour = "Mature"))+
coord_cartesian(x = c(0,0.4),
y = c(-80, 60))+
labs(x = "Time (s)",
y = "Voltage (mV)")+
theme_clean()+
scale_colour_manual(values = c("black", "green"))+
q
hiPSC_ventricular_plot
source("~/Downloads/AP-batch-analysis-RECOVERED/manuscript/code/Figure 6 - hiPSC-CMs.R", echo=TRUE)
hiPSC_ventricular_plot
hiPSC_ventricular_plot <-
ggplot() +
geom_line(data = hiPSC_ventricular_immature,
aes(x = hiPSC_ventricular_imature[,1], # subtracted time to synchronize the peaks
y = hiPSC_ventricular_imature[,2],
colour = "Immature"))+
geom_line(data = hiPSC_ventricular_mature,
aes(x = hiPSC_ventricular_mature[,1], # subtracted time to synchronize the peaks
y = hiPSC_ventricular_mature[,2],
colour = "Mature"))+
coord_cartesian(x = c(0,0.4),
y = c(-80, 60))+
labs(x = "Time (s)",
y = "Voltage (mV)")+
theme_clean()+
scale_colour_manual(values = c("black", "green"))+
q
hiPSC_ventricular_plot
source("~/Downloads/AP-batch-analysis-RECOVERED/manuscript/code/Figure 6 - hiPSC-CMs.R", echo=TRUE)
hiPSC_ventricular_plot
source("~/Downloads/AP-batch-analysis-RECOVERED/manuscript/code/Figure 6 - hiPSC-CMs.R", echo=TRUE)
hiPSC_ventricular_plot
source("~/Downloads/AP-batch-analysis-RECOVERED/manuscript/code/Figure 6 - hiPSC-CMs.R", echo=TRUE)
source("~/Downloads/AP-batch-analysis-RECOVERED/manuscript/code/Figure 6 - hiPSC-CMs.R", echo=TRUE)
source("~/Downloads/AP-batch-analysis-RECOVERED/manuscript/code/Figure 6 - hiPSC-CMs.R", echo=TRUE)
source("~/Downloads/AP-batch-analysis-RECOVERED/manuscript/code/Figure 6 - hiPSC-CMs.R", echo=TRUE)
hiPSC_ventricular_mature_abf <- readABF::readABF("../raw_data/hiPSC-CMs/WTC11_Expanded.Maturated_Tyr_0.5Hz/21504019.abf")
source("~/Downloads/AP-batch-analysis-RECOVERED/manuscript/code/Figure 6 - hiPSC-CMs.R", echo=TRUE)
source("~/Downloads/AP-batch-analysis-RECOVERED/manuscript/code/Figure 6 - hiPSC-CMs.R", echo=TRUE)
source("~/Downloads/AP-batch-analysis-RECOVERED/manuscript/code/Figure 6 - hiPSC-CMs.R", echo=TRUE)
source("~/Downloads/AP-batch-analysis-RECOVERED/manuscript/code/Figure 6 - hiPSC-CMs.R", echo=TRUE)
source("~/Downloads/AP-batch-analysis-RECOVERED/manuscript/code/Figure 6 - hiPSC-CMs.R", echo=TRUE)
source("~/Downloads/AP-batch-analysis-RECOVERED/manuscript/code/Figure 6 - hiPSC-CMs.R", echo=TRUE)
source("~/Downloads/AP-batch-analysis-RECOVERED/manuscript/code/Figure 6 - hiPSC-CMs.R", echo=TRUE)
source("~/Downloads/AP-batch-analysis-RECOVERED/manuscript/code/Figure 6 - hiPSC-CMs.R", echo=TRUE)
source("~/Downloads/AP-batch-analysis-RECOVERED/manuscript/code/Figure 6 - hiPSC-CMs.R", echo=TRUE)
source("~/Downloads/AP-batch-analysis-RECOVERED/manuscript/code/Figure 6 - hiPSC-CMs.R", echo=TRUE)
source("~/Downloads/AP-batch-analysis-RECOVERED/manuscript/code/Figure 6 - hiPSC-CMs.R", echo=TRUE)
source("~/Downloads/AP-batch-analysis-RECOVERED/manuscript/code/Figure 6 - hiPSC-CMs.R", echo=TRUE)
source("~/Downloads/AP-batch-analysis-RECOVERED/manuscript/code/Figure 6 - hiPSC-CMs.R", echo=TRUE)
source("~/Downloads/AP-batch-analysis-RECOVERED/manuscript/code/Figure 6 - hiPSC-CMs.R", echo=TRUE)
source("~/Downloads/AP-batch-analysis-RECOVERED/scripts/AP_Output_Analysis.R", echo=TRUE)
source("~/Downloads/AP-batch-analysis-RECOVERED/scripts/AP_Output_Analysis.R", echo=TRUE)
source("~/Downloads/AP-batch-analysis-RECOVERED/manuscript/code/Figure 6 - hiPSC-CMs.R", echo=TRUE)
getwd
getwd()
source("~/Downloads/AP-batch-analysis-RECOVERED/manuscript/code/Figure 6 - hiPSC-CMs.R", echo=TRUE)
source("~/Downloads/AP-batch-analysis-RECOVERED/manuscript/code/Figure 6 - hiPSC-CMs.R", echo=TRUE)
last_error()
rlang::last_error()
combined
combined_freq_means_plot
# Combine Panels ####
combined_freq_means_plot <-
plot_grid(hiPSC_ventricular_plot,
hiPSC_freq_means_plot,
nrow = 1,
rel_widths = c(0.8, 1.5),
labels = c("C", "D"))
plot_grid(hiPSC_ventricular_plot,
hiPSC_freq_means_plot,
nrow = 1,
rel_widths = c(0.8, 1.5),
labels = c("C", "D"))
hiPSC_freq_means_plot <-
df %>%
filter(variable != "SD1_SD2 Ratio" |
variable != "Peak (mV)" |
variable != "SD2") %>%
ggplot(aes(x = `Condition 4`,
y = value,
fill = `Condition 4`))+
stat_summary(fun = "mean", geom = "bar", colour = "black")+
stat_summary(fun.data = "mean_se", geom = "errorbar", width = 0.25)+
geom_point()+
facet_wrap(~variable, scales = "free_y", ncol = 4)+
theme_classic()+
scale_fill_manual(values = c("gray", "#5B9A63"), labels = c("Immature", "Mature"))+
theme(legend.title = element_blank(),
strip.background = element_blank(),
strip.text = element_text(face = "bold"),
axis.line=element_line())
View(df)
source("~/Downloads/AP-batch-analysis-RECOVERED/manuscript/code/Figure 6 - hiPSC-CMs.R", echo=TRUE)
combined <-
plot_grid(correlations_outlier_plot,
combined_freq_means_plot,
ncol = 1,
rel_heights = c(1.5,1))
# Combine Panels ####
combined_freq_means_plot <-
plot_grid(hiPSC_ventricular_plot,
hiPSC_freq_means_plot,
nrow = 1,
rel_widths = c(0.8, 1.5),
labels = c("C", "D"))
hiPSC_freq_means_plot
source("~/Downloads/AP-batch-analysis-RECOVERED/manuscript/code/Figure 6 - hiPSC-CMs.R", echo=TRUE)
combined_freq_means_plot
source("~/Downloads/AP-batch-analysis-RECOVERED/manuscript/code/Figure 6 - hiPSC-CMs.R", echo=TRUE)
combined_freq_means_plot
source("~/Downloads/AP-batch-analysis-RECOVERED/manuscript/code/Figure 6 - hiPSC-CMs.R", echo=TRUE)
combined_freq_means_plot
source("~/Downloads/AP-batch-analysis-RECOVERED/manuscript/code/Figure 6 - hiPSC-CMs.R", echo=TRUE)
combined_freq_means_plot
hiPSC_ventricular_plot
hiPSC_ventricular_plot <-
ggplot() +
geom_line(data = hiPSC_ventricular_immature,
aes(x = hiPSC_ventricular_immature[,1], # subtracted time to synchronize the peaks
y = hiPSC_ventricular_immature[,2],
colour = "Immature"))+
geom_line(data = hiPSC_ventricular_mature,
aes(x = hiPSC_ventricular_mature[,1], # subtracted time to synchronize the peaks
y = hiPSC_ventricular_mature[,2],
colour = "Mature"))+
coord_cartesian(x = c(0,0.4),
y = c(-80, 65))+
labs(x = "Time (s)",
y = "Voltage (mV)")+
theme_clean()+
scale_colour_manual(values = c("black", "#5B9A63"), labels = c("Immature", "Mature"))+
q
hiPSC_ventricular_plot
hiPSC_ventricular_plot <-
ggplot() +
geom_line(data = hiPSC_ventricular_immature,
aes(x = hiPSC_ventricular_immature[,1], # subtracted time to synchronize the peaks
y = hiPSC_ventricular_immature[,2],
colour = "Immature"))+
geom_line(data = hiPSC_ventricular_mature,
aes(x = hiPSC_ventricular_mature[,1], # subtracted time to synchronize the peaks
y = hiPSC_ventricular_mature[,2],
colour = "Mature"))+
coord_cartesian(x = c(0,0.4),
y = c(-80, 70))+
labs(x = "Time (s)",
y = "Voltage (mV)")+
theme_clean()+
scale_colour_manual(values = c("black", "#5B9A63"), labels = c("Immature", "Mature"))+
q
source("~/Downloads/AP-batch-analysis-RECOVERED/manuscript/code/Figure 6 - hiPSC-CMs.R", echo=TRUE)
hiPSC_freq_means_plot
source("~/Downloads/AP-batch-analysis-RECOVERED/manuscript/code/Figure 6 - hiPSC-CMs.R", echo=TRUE)
## hiPSC-CMs Ventricular ########
hiPSC_ventricular_plot <-
ggplot() +
geom_line(data = hiPSC_ventricular_immature,
aes(x = hiPSC_ventricular_immature[,1], # subtracted time to synchronize the peaks
y = hiPSC_ventricular_immature[,2],
colour = "Immature"))+
geom_line(data = hiPSC_ventricular_mature,
aes(x = hiPSC_ventricular_mature[,1], # subtracted time to synchronize the peaks
y = hiPSC_ventricular_mature[,2],
colour = "Mature"))+
coord_cartesian(x = c(0,0.4),
y = c(-80, 60))+
labs(x = "Time (s)",
y = "Voltage (mV)")+
theme_clean()+
scale_colour_manual(values = c("black", "#5B9A63"), labels = c("Immature", "Mature"))+
q
hiPSC_freq_means_plot
hiPSC_freq_means_plot <-
df %>%
filter(variable != "SD1_SD2 Ratio",
variable != "Peak (mV)",
variable != "SD2",
`Condition 4` == "1Hz") %>%
ggplot(aes(x = `Condition 2`,
y = value,
fill = `Condition 2`))+
stat_summary(fun = "mean", geom = "bar", colour = "black")+
stat_summary(fun.data = "mean_se", geom = "errorbar", width = 0.25)+
geom_point()+
facet_wrap(~variable, scales = "free_y", ncol = 4)+
theme_classic()+
scale_fill_manual(values = c("gray", "#5B9A63"), labels = c("Immature", "Mature"))+
scale_x_continuous(labels = c("Immature", "Mature"))+
theme(legend.title = element_blank(),
strip.background = element_blank(),
strip.text = element_text(face = "bold"),
axis.line=element_line())
hiPSC_freq_means_plot
hiPSC_freq_means_plot <-
df %>%
filter(variable != "SD1_SD2 Ratio",
variable != "Peak (mV)",
variable != "SD2",
`Condition 4` == "1Hz") %>%
ggplot(aes(x = `Condition 2`,
y = value,
fill = `Condition 2`))+
stat_summary(fun = "mean", geom = "bar", colour = "black")+
stat_summary(fun.data = "mean_se", geom = "errorbar", width = 0.25)+
geom_point()+
facet_wrap(~variable, scales = "free_y", ncol = 4)+
theme_classic()+
scale_fill_manual(values = c("gray", "#5B9A63"), labels = c("Immature", "Mature"))+
scale_x_discrete(labels = c("Immature", "Mature"))+
theme(legend.title = element_blank(),
strip.background = element_blank(),
strip.text = element_text(face = "bold"),
axis.line=element_line())
hiPSC_freq_means_plot
combined_freq_means_plot
source("~/Downloads/AP-batch-analysis-RECOVERED/manuscript/code/Figure 6 - hiPSC-CMs.R", echo=TRUE)
hiPSC_freq_means_plot <-
df %>%
filter(variable != "SD1_SD2 Ratio",
variable != "Peak (mV)",
variable != "SD2",
`Condition 4` == "1Hz") %>%
ggplot(aes(x = `Condition 2`,
y = value,
fill = `Condition 2`))+
stat_summary(fun = "mean", geom = "bar", colour = "black")+
stat_summary(fun.data = "mean_se", geom = "errorbar", width = 0.25)+
geom_point()+
facet_wrap(~variable, scales = "free_y", ncol = 4)+
theme_classic()+
scale_fill_manual(values = c("gray", "#5B9A63"), labels = c("Immature", "Mature"))+
scale_x_discrete(labels = c("Immature", "Mature"))+
theme(legend.title = element_blank(),
strip.background = element_blank(),
strip.text = element_text(face = "bold"),
axis.line=element_line(),
axis.title.x = element_blank())
source("~/Downloads/AP-batch-analysis-RECOVERED/manuscript/code/Figure 6 - hiPSC-CMs.R", echo=TRUE)
